git clone 'URL'			- клонирует удаленный репозиторий в текущий каталог (лок. и удал. репозитории автомат. связаны)

git remote -v			- проверка, что локальный и удаленный репозитории связаны

Fork создаёт полностью независимую копию репозитория в аккаунте GitHub
Обычно комбинация Fork + clone используется для внесения изменений в публичные репозитории
Если репозиторий приватный или это репозиторий вашей компании, при работе с ним достаточно clone

branch — это изолированный поток разработки проекта. В таком потоке можно проверять разные идеи, тестировать новую функциональность и т.д.

git branch 						- посмотреть все ветки проекта
git branch <название_ветки>		- создать новую ветку
git checkout <название_ветки>	- переключиться на другую ветку
git checkout -b <название_ветки>	- создать новую ветку и сразу переключиться на неё
git branch -D <название_ветки>		- удалить ветку

git diff <название_ветки1> <название_ветки2>	- покажет отличия между ветками

git merge <название_ветки>			- выполнить слияние веток (присоединить указанную к текущей)


Pull Request - запрос на изменения, запрос на слияние удалённых веток.
Через GitHub делается следующим образом:
1. Перейдите на страницу репозитория, а затем выберите вкладку Pull requests в верхней части экрана.
2. Нажмите на зелёную кнопку New pull request
3. Выберите названия веток: ветка «откуда» и ветка «куда»
4. Нажмите на кнопку Create pull request.
5. Заполните поля с названием и описанием пул-реквеста. Нажмите Create pull request.
6. Теперь вы или ваши коллеги могут перейти на вкладку Files changed (англ. «изменённые файлы»), чтобы оставить свои комментарии — провести ревью. 
По окончании ревью можно посмотреть комментарии и обсудить изменения на вкладке Pull requests. 
Также вы можете в любой момент добавить дополнительные коммиты в ветку — они автоматически попадут в открытый пул-реквест после пуша.
Осталось только нажать на кнопку Merge pull request — это действие объединит ветку с вашими изменениями и ветку main.

git pull		- скачать изменения с удаленного репозитория

Дополнительно git pull и git merge выполняют перед тем, как создать пул-реквест.
(перед созданием пул-реквеста рекомендуется сначала подтянуть изменения из основной ветки, объединить их с вашей,
решить все возможные конфликты и лишь затем сделать push.)

$ git checkout main				# перешли в main
$ git pull						# подтянули новые изменения в main
$ git checkout my-branch		# вернулись в рабочую ветку my-branch
$ git merge main				# влили main в новую ветку my-branch
$ git push -u origin my-branch	# отправили ветку my-branch в удалённый репозиторий

